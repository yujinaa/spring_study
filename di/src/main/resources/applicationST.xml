<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

<!-- 경로를 잡아주면 ${print.name} 이 값을 읽는다 -->
<context:property-placeholder location="classpath:print.properties"/>

	<!-- 객체 만들기 -->
	<bean id="st01" class="com.care.root02.Student" />
	<bean id="stb" class="com.care.root02.STBean">
		<property name="st" ref="st01"/>
		
		<!-- <property><value> : 변수세팅공간으로 세터가 있어야지만 가능 -->
		
		<!-- MainClass에서 
			//stBean.setName("홍길동11");
			//stBean.setAge(201343);     주석처리후 이곳에서 작성--> 
		<property name="name">    <!-- property와 value는 나눠서 작성 가능 -->
			<value>${print.name}</value><!-- 해당값 변경시 분리해서 직접 변경하지 않아도 된다 -->
		</property>
		<property name="age" value="12"/>  <!-- 한번에 작성 가능 -->
		
	</bean>
	
	<!-- 자바에선 이코드와 같다
	<bean id="st01" class="com.care.root02.Student" /> ==> Student st01 = new Student();	
	<bean id="stb" class="com.care.root02.STBean">     ==> STBean stBean = new STBean();
	<property name="st" ref="st01"/>                   ==> stBean.setSt(st01);
	 -->
</beans>
